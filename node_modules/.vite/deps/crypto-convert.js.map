{
  "version": 3,
  "sources": ["../../crypto-convert/dist/helpers.js", "../../node-fetch/browser.js", "../../form-data/lib/browser.js", "../../rests/lib/index.js", "../../crypto-convert/dist/api.js", "../../crypto-convert/dist/worker.js", "../../crypto-convert/dist/custom.js", "../../crypto-convert/dist/index.js"],
  "sourcesContent": ["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isBrowser = exports.isValidUrl = exports.isEmpty = exports.formatNumber = exports.getAverage = exports.symbolMap = void 0;\r\nfunction symbolMap(symbol, map, recurisve = false) {\r\n    const mapKeys = Object.keys(map);\r\n    for (var c = 0; c < mapKeys.length; c++) {\r\n        if (symbol.length >= mapKeys[c].length + 3 && (symbol.endsWith(mapKeys[c]) ||\r\n            symbol.startsWith(mapKeys[c]))) {\r\n            const cleaned = symbol.replace(mapKeys[c], map[mapKeys[c]]);\r\n            if (recurisve) {\r\n                return symbolMap(cleaned, map, false);\r\n            }\r\n            return cleaned;\r\n        }\r\n    }\r\n    return symbol;\r\n}\r\nexports.symbolMap = symbolMap;\r\nfunction getAverage(pairs) {\r\n    if (!pairs.length) {\r\n        return {};\r\n    }\r\n    ;\r\n    const allPairs = pairs.flatMap((pair) => Object.keys(pair)).filter((pair, i, arr) => arr.indexOf(pair) == i);\r\n    return allPairs.reduce((o, pair) => {\r\n        let values = pairs.map((e) => e[pair]).filter(v => v), averageValue = formatNumber(values.reduce((sum, v) => sum + v, 0) / values.length, 8);\r\n        o[pair] = averageValue;\r\n        return o;\r\n    }, {});\r\n}\r\nexports.getAverage = getAverage;\r\nfunction formatNumber(n, decimals) {\r\n    if (typeof n != \"number\") {\r\n        n = Number(n);\r\n        if (isNaN(n)) {\r\n            return NaN;\r\n        }\r\n    }\r\n    let s = typeof decimals == \"number\" ? (n.toFixed(decimals)) : n + '';\r\n    let clean = s.match(/\\./) && !s.match(/[eE]/) ? s.replace(/0+$/g, '').replace(/\\.+$/g, '') : s;\r\n    return parseFloat(clean);\r\n}\r\nexports.formatNumber = formatNumber;\r\nfunction isEmpty(obj) {\r\n    if (!obj) {\r\n        return true;\r\n    }\r\n    for (var _ in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexports.isEmpty = isEmpty;\r\nfunction isValidUrl(string) {\r\n    try {\r\n        return /^https?\\:\\/\\//.test((new URL(string)).protocol);\r\n    }\r\n    catch (err) {\r\n        return false;\r\n    }\r\n}\r\nexports.isValidUrl = isValidUrl;\r\nexports.isBrowser = (typeof window !== \"undefined\" && window.document);\r\n", "\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n", "/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\nfunction Rests(endpoints, options) {\r\n    const fetch = (typeof window !== 'undefined') ? window === null || window === void 0 ? void 0 : window.fetch : require(\"node-fetch\"), FormData = (typeof window !== 'undefined') ? window === null || window === void 0 ? void 0 : window.FormData : require(\"form-data\");\r\n    if (!fetch) {\r\n        throw new Error(\"Fetch API is not installed. If you are using Node please run `npm install node-fetch`\");\r\n    }\r\n    if (!FormData) {\r\n        throw new Error(\"FormData is not installed. If you are using Node please run `npm install form-data`\");\r\n    }\r\n    const copyOptions = (o) => (Object.assign(Object.assign({}, o), { headers: Object.assign({}, o.headers), params: Object.assign({}, o.params), values: Object.assign({}, o.values) }));\r\n    const parseSet = (values) => {\r\n        var _a, _b;\r\n        if (((_b = (_a = values === null || values === void 0 ? void 0 : values.__proto__) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) != \"Object\") {\r\n            throw new Error(\"Invalid $options object.\");\r\n        }\r\n        let saveOptions = copyOptions(values.$options || {});\r\n        delete values['$options'];\r\n        return Object.assign(Object.assign({}, saveOptions), { values: Object.assign(Object.assign({}, saveOptions.values), values) });\r\n    };\r\n    const mergeOptions = (prevOptions, currentOptions, mutate = false //Mutate the previous options?\r\n    ) => {\r\n        let firstOptions = mutate ? prevOptions || {} : copyOptions(prevOptions || {});\r\n        let secondOptions = copyOptions(currentOptions || {});\r\n        secondOptions.headers = Object.assign(Object.assign({}, firstOptions.headers), secondOptions.headers);\r\n        secondOptions.params = Object.assign(Object.assign({}, firstOptions.params), secondOptions.params);\r\n        secondOptions.values = Object.assign(Object.assign({}, firstOptions.values), secondOptions.values);\r\n        Object.assign(firstOptions, secondOptions);\r\n        return firstOptions;\r\n    };\r\n    endpoints = Object.assign({}, endpoints);\r\n    let global_options = {\r\n        base: \"\",\r\n        headers: {\r\n            'User-Agent': 'Rests JS (v1.1.0)'\r\n        },\r\n        params: {},\r\n        values: {},\r\n        on_error: void 0,\r\n        on_success: void 0,\r\n        on_request: void 0,\r\n        fetch_agent: null,\r\n    };\r\n    mergeOptions(global_options, ((endpoints === null || endpoints === void 0 ? void 0 : endpoints.$options) || {}), true);\r\n    mergeOptions(global_options, options, true);\r\n    const def_param_enctypes = {\r\n        \"json\": \"application/json\",\r\n        \"form\": \"multipart/form-data\",\r\n        \"urlencoded\": \"application/x-www-form-urlencoded\",\r\n        \"text\": \"text/plain\"\r\n    }, allowed_param_enctypes = Object.values(def_param_enctypes), allowed_param_locations = [\"headers\", \"body\", \"query\", \"path\"], def_param_locations = {\r\n        'POST': 'body',\r\n        'GET': 'query',\r\n    };\r\n    const serializers = {\r\n        'multipart/form-data': (function () {\r\n            var formData = new FormData();\r\n            formData.toString = function () { return this; };\r\n            return formData;\r\n        }),\r\n        'application/x-www-form-urlencoded': (function () { return new URLSearchParams(); }),\r\n        'application/json': (function () {\r\n            return {\r\n                append: function (key, value) { this.data = this.data || {}; this.data[key] = value; },\r\n                toString: function () { return JSON.stringify(this.data); },\r\n                isEmpty: function () {\r\n                    return (!this.data || Object.keys(this.data).length == 0);\r\n                }\r\n            };\r\n        }),\r\n        'text/plain': (function () {\r\n            return {\r\n                append: function (_, value) { this.data = this.data || []; return this.data.push(value); },\r\n                toString: function () { return this.data.join(''); },\r\n                isEmpty: function () {\r\n                    return (!this.data || this.data.length == 0);\r\n                }\r\n            };\r\n        })\r\n    };\r\n    const isNull = (value) => {\r\n        return value === null || value === undefined;\r\n    };\r\n    const isEmptyIterable = (iterable) => {\r\n        for (var _ of iterable) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    const escapeRegExp = (string) => {\r\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    };\r\n    const capitalize = (string) => {\r\n        return string.substr(0, 1).toUpperCase() + string.substr(1, string.length);\r\n    };\r\n    const formToJson = (f) => {\r\n        return Object.fromEntries(Array.from(f.keys(), (k) => (k.endsWith('[]') ? [k.slice(0, -2), f.getAll(k)] : [k, f.get(k)])));\r\n    };\r\n    const get = (t, path) => (path.split(\".\").reduce((r, k) => r === null || r === void 0 ? void 0 : r[k], t));\r\n    const getOne = (...args) => {\r\n        for (var i = 0; i < args.length; i++) {\r\n            if (args[i] !== null && args[i] !== undefined) {\r\n                return args[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Fetch API\r\n     */\r\n    const sendRequest = (url, options, currentOptions, requestInfo) => __awaiter(this, void 0, void 0, function* () {\r\n        return fetch(url, options)\r\n            .then(function (res) {\r\n            var _a;\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    var contentType = res.headers.get('Content-Type') || '';\r\n                    let corsType;\r\n                    try {\r\n                        corsType = res.type;\r\n                    }\r\n                    catch (err) {\r\n                        //prevent errors on cloudflare workers \r\n                    }\r\n                    let formattedResponse = {\r\n                        statusCode: res.status,\r\n                        statusText: res.statusText,\r\n                        headers: res.headers,\r\n                        type: corsType,\r\n                        ok: res.ok\r\n                    };\r\n                    let responseTypes = {\r\n                        'application\\/json': 'json',\r\n                        'text\\/plain': 'text',\r\n                        '(multipart\\/form\\-data|application\\/x\\-www\\-form\\-urlencoded)': 'formData',\r\n                        'blob': 'blob',\r\n                        'text': 'text'\r\n                    };\r\n                    let currentResponseType = Object.keys(responseTypes).find((responseType) => (new RegExp(responseType)).test(contentType)) || \"text\";\r\n                    formattedResponse[responseTypes[currentResponseType]] = yield res[responseTypes[currentResponseType]]();\r\n                    formattedResponse['message'] = ((_a = formattedResponse === null || formattedResponse === void 0 ? void 0 : formattedResponse.json) === null || _a === void 0 ? void 0 : _a.message) || (res.ok ? \"Success.\" : \"Something went wrong.\");\r\n                    if (!res.ok) {\r\n                        throw formattedResponse;\r\n                    }\r\n                    if (currentOptions.on_success) {\r\n                        let successCallbackRes = currentOptions.on_success(formattedResponse, requestInfo);\r\n                        if (successCallbackRes !== undefined) {\r\n                            return successCallbackRes;\r\n                        }\r\n                    }\r\n                    return formattedResponse;\r\n                }\r\n                catch (err) {\r\n                    if (currentOptions.on_error) {\r\n                        let errorCallbackRes = currentOptions.on_error(err, requestInfo);\r\n                        if (errorCallbackRes !== undefined) {\r\n                            return errorCallbackRes;\r\n                        }\r\n                    }\r\n                    return Promise.reject(err);\r\n                }\r\n            });\r\n        });\r\n    });\r\n    /**\r\n     * Request Wrapper\r\n     */\r\n    function wrap(endpoint, categoryOptions, categoryKey) {\r\n        endpoint.method = (endpoint.method || \"get\").toUpperCase(),\r\n            endpoint.params = endpoint.params || {};\r\n        const sender = function (params) {\r\n            var _a, _b, _c, _d, _e, _f;\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                if (this instanceof sender) {\r\n                    throw new Error(\"This is an endpoint, you can't initialize this.\");\r\n                }\r\n                var currentOptions = mergeOptions(global_options, categoryOptions);\r\n                currentOptions.on_request = endpoint.on_request || currentOptions.on_request;\r\n                currentOptions.on_success = endpoint.on_success || currentOptions.on_success;\r\n                currentOptions.on_error = endpoint.on_error || currentOptions.on_error;\r\n                var url = `${currentOptions.base}${endpoint.path}`;\r\n                if ((params === null || params === void 0 ? void 0 : params['$sandbox']) || ((_a = currentOptions === null || currentOptions === void 0 ? void 0 : currentOptions.values) === null || _a === void 0 ? void 0 : _a['$sandbox'])) {\r\n                    url = `${currentOptions.sandboxBase || currentOptions.base}${endpoint.path}`;\r\n                }\r\n                var options = {\r\n                    method: endpoint.method,\r\n                    headers: Object.assign({}, currentOptions.headers),\r\n                    agent: currentOptions.fetch_agent\r\n                };\r\n                var enctype = allowed_param_enctypes.includes(endpoint.enctype) ? endpoint.enctype : def_param_enctypes[endpoint.enctype || \"json\"];\r\n                var request_params = Object.assign({}, currentOptions.params, endpoint.params);\r\n                var bodySerializer = serializers[enctype](), querySerializer = new URLSearchParams();\r\n                /**\r\n                 * Parse Params\r\n                 */\r\n                if (((_b = params === null || params === void 0 ? void 0 : params.constructor) === null || _b === void 0 ? void 0 : _b.name) == 'FormData') {\r\n                    params = formToJson(params);\r\n                }\r\n                else {\r\n                    params = params || {};\r\n                }\r\n                for (var param_name in request_params) {\r\n                    var param = request_params[param_name];\r\n                    var current_param_value = params[param_name], options_param_value = (_c = currentOptions === null || currentOptions === void 0 ? void 0 : currentOptions.values) === null || _c === void 0 ? void 0 : _c[param_name], default_param_value = param.default, example_param_value = ((params === null || params === void 0 ? void 0 : params['$sandbox']) || ((_d = currentOptions === null || currentOptions === void 0 ? void 0 : currentOptions.values) === null || _d === void 0 ? void 0 : _d['$sandbox'])) ? param.example : undefined;\r\n                    var param_value = getOne(current_param_value, options_param_value, example_param_value, default_param_value);\r\n                    var param_dest = param.name || param_name;\r\n                    var param_error = param.help || `The '${param_name}' field is invalid.`;\r\n                    //Required Param or not\r\n                    if (param.required && isNull(param_value)) {\r\n                        var error = new Error(param_error);\r\n                        error.field = param_name;\r\n                        throw error;\r\n                    }\r\n                    //Skip, not required\r\n                    if (isNull(param_value))\r\n                        continue;\r\n                    //Formatter function?\r\n                    if (typeof param.format === \"function\") {\r\n                        try {\r\n                            param_value = param.format(param_value);\r\n                        }\r\n                        catch (e) {\r\n                            var error = new Error(e.message || param_error);\r\n                            error.field = param_name;\r\n                            throw error;\r\n                        }\r\n                    }\r\n                    //Type\r\n                    if (param.type && param.type !== \"any\") {\r\n                        var error = new Error(param_error);\r\n                        error.field = param_name;\r\n                        if (([\"string\", \"boolean\", \"number\"].includes(param.type) && typeof param_value != param.type) ||\r\n                            (param.type == \"array\" && !Array.isArray(param_value)) ||\r\n                            (param.type == \"object\" && (!param_value || param_value.__proto__.constructor.name !== \"Object\"))) {\r\n                            throw error;\r\n                        }\r\n                    }\r\n                    //Validate\r\n                    if (param.validate) {\r\n                        if (((_f = (_e = param.validate) === null || _e === void 0 ? void 0 : _e.constructor) === null || _f === void 0 ? void 0 : _f.name) == \"RegExp\") {\r\n                            param.validate['toJSON'] = function () {\r\n                                return param.validate.toString().replace(/^\\//g, '').replace(/\\/$/g, '');\r\n                            };\r\n                        }\r\n                        if (!(new RegExp(param.validate).test(param_value))) {\r\n                            var error = new Error(param_error);\r\n                            error.field = param_name;\r\n                            throw error;\r\n                        }\r\n                    }\r\n                    //Max/Min\r\n                    if (param.type == \"number\") {\r\n                        if (param.hasOwnProperty('max') && !isNaN(param.max) && Number(param_value) > Number(param.max)) {\r\n                            var error = new Error(`The maximum allowed value allowed for the ${param_dest} parameter is ${param.max}`);\r\n                            error.field = param_name;\r\n                            throw error;\r\n                        }\r\n                        if (param.hasOwnProperty('min') && !isNaN(param.min) && Number(param_value) < Number(param.min)) {\r\n                            var error = new Error(`The minimum allowed value allowed for the ${param_dest} parameter is ${param.min}`);\r\n                            error.field = param_name;\r\n                            throw error;\r\n                        }\r\n                    }\r\n                    //In\r\n                    if (param.in && Array.isArray(param.in) && !param.in.includes(param_value)) {\r\n                        var error = new Error(`The ${param_dest} parameter should be one of these values: ${param.in}`);\r\n                        error.field = param_name;\r\n                        throw error;\r\n                    }\r\n                    //Location\r\n                    var param_location = (typeof param.location === \"string\" ? param.location.toLowerCase() : def_param_locations[options.method]);\r\n                    if (!param_location || !allowed_param_locations.includes(param_location)) {\r\n                        throw new Error(`Invalid location for '${param_name}' field.`);\r\n                    }\r\n                    if (param_location == \"headers\") {\r\n                        options['headers'] = options['headers'] || {};\r\n                        options['headers'][param_dest] = param_value;\r\n                        continue;\r\n                    }\r\n                    if (param_location == \"body\") {\r\n                        bodySerializer.append(param_dest, param_value);\r\n                        continue;\r\n                    }\r\n                    if (param_location == \"query\") {\r\n                        querySerializer.append(param_dest, param_value);\r\n                        continue;\r\n                    }\r\n                    if (param_location == \"path\") {\r\n                        url = url.replace(new RegExp(`\\{${escapeRegExp(param_dest).trim()}\\}`), param_value);\r\n                    }\r\n                }\r\n                //Set Query\r\n                var hasQuery = querySerializer.toString();\r\n                if (hasQuery) {\r\n                    url = `${url}?${hasQuery}`;\r\n                }\r\n                //Set Body\r\n                var isEmptyBody = (bodySerializer.keys && isEmptyIterable(bodySerializer.keys())) ||\r\n                    (bodySerializer.getLengthSync && bodySerializer.getLengthSync() == 0) ||\r\n                    (bodySerializer.isEmpty && bodySerializer.isEmpty());\r\n                if (!isEmptyBody) {\r\n                    options['body'] = bodySerializer.toString();\r\n                }\r\n                //Set content-type header, (not set for multipart/form-data because it overrides the automatically generated multipart key)\r\n                if (options['body'] && enctype !== 'multipart/form-data') {\r\n                    options['headers'] = options['headers'] || {};\r\n                    options['headers']['Content-Type'] = enctype;\r\n                }\r\n                let requestInfo = {\r\n                    url: url,\r\n                    options: options,\r\n                    params: params,\r\n                    key: categoryKey,\r\n                    instance: global_options['__$root_instance__'],\r\n                    self: wrap(endpoint, categoryOptions, categoryKey)\r\n                };\r\n                //Pre-Request Middleware\r\n                if (currentOptions.on_request) {\r\n                    var requestCallbackRes = yield Promise.resolve(currentOptions.on_request(requestInfo));\r\n                    if (requestCallbackRes) {\r\n                        if ((requestCallbackRes === null || requestCallbackRes === void 0 ? void 0 : requestCallbackRes.url) || (requestCallbackRes === null || requestCallbackRes === void 0 ? void 0 : requestCallbackRes.options)) {\r\n                            url = requestCallbackRes.url || url;\r\n                            options = requestCallbackRes.options || options;\r\n                        }\r\n                        else {\r\n                            return requestCallbackRes;\r\n                        }\r\n                    }\r\n                    if (requestCallbackRes === false) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return sendRequest(url, options, currentOptions, requestInfo);\r\n            });\r\n        };\r\n        return sender;\r\n    }\r\n    /**\r\n     * Initalize a category and set values for it's endpoints. (Full category options can be updated with special $options key)\r\n     */\r\n    function newCategory(name, categoryOptions, categoryName, isRoot) {\r\n        name = name || \"Rests\";\r\n        var New = {\r\n            [name]: (function (values) {\r\n                if (!(this instanceof New[name])) {\r\n                    throw new Error(\"This is a category, you can initalize this category to update values using 'new' command.\");\r\n                }\r\n                if (isRoot) {\r\n                    throw new Error(\"This is already initialized, you can use 'set' instead.\");\r\n                }\r\n                let currentOptions = mergeOptions(global_options, categoryOptions);\r\n                let updateOptions = parseSet(values);\r\n                let newOptions = mergeOptions(currentOptions, updateOptions);\r\n                return Rests(categoryName ? get(endpoints, categoryName) : endpoints, newOptions);\r\n            })\r\n        };\r\n        if (isRoot) {\r\n            /**\r\n             * Root object can update it's options\r\n             */\r\n            New[name]['set'] = function (values) {\r\n                if (this instanceof New[name]['set']) {\r\n                    throw new Error(\"The set object can't be initialized.\");\r\n                }\r\n                let updateOptions = parseSet(values);\r\n                //Mutate Global Options\r\n                mergeOptions(global_options, updateOptions, true);\r\n                return New[name];\r\n            };\r\n        }\r\n        return New[name];\r\n    }\r\n    /**\r\n     * Recursive loop on schema and make wrappers\r\n     */\r\n    function traverse(root, schema, categoryOptions, categoryKey) {\r\n        for (var category in schema) {\r\n            var tree = schema[category];\r\n            if (!tree || typeof tree !== 'object') {\r\n                continue;\r\n            }\r\n            //Skip duplicate keys in main object root\r\n            if (typeof root[category] !== \"undefined\") {\r\n                console.warn(`Skipping ${category} as it confilicts with another key in the object`);\r\n                continue;\r\n            }\r\n            let categoryName = `${categoryKey ? categoryKey + '.' : ''}${category}`;\r\n            //Is Endpoint\r\n            if (tree.hasOwnProperty('path')) {\r\n                var endpoint = tree;\r\n                root[category] = wrap(endpoint, categoryOptions, categoryName);\r\n            }\r\n            //Is Category, recursion\r\n            else {\r\n                // Don't make category for special objects\r\n                if (category.substr(0, 1) === '$') {\r\n                    continue;\r\n                }\r\n                let nextOptions = categoryOptions;\r\n                if (tree === null || tree === void 0 ? void 0 : tree['$options']) {\r\n                    nextOptions = mergeOptions(categoryOptions, tree === null || tree === void 0 ? void 0 : tree['$options']);\r\n                }\r\n                root[category] = traverse(newCategory(category, nextOptions, categoryName), tree, nextOptions, categoryName);\r\n            }\r\n        }\r\n        return root;\r\n    }\r\n    const rootCategory = Object.defineProperty(newCategory(\"Rests\", global_options, undefined, true), '__schema__', {\r\n        value: {\r\n            schema: endpoints,\r\n            options: global_options\r\n        },\r\n        writable: false,\r\n        enumerable: false\r\n    });\r\n    global_options['__$root_instance__'] = rootCategory;\r\n    return traverse(rootCategory, endpoints, {});\r\n}\r\nRests.default = Rests;\r\nexports.default = Rests;\r\nmodule.exports = Rests;\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst rests_1 = __importDefault(require(\"rests\"));\r\nconst helpers_1 = require(\"./helpers\");\r\n//We need to specify the list of pairs for kraken ticker API, because the mfs couldn't add an 'ALL' parameter.\r\n//This is done automatically and saved on this variable as cache.\r\nlet krakenPairsList;\r\n//Binance shows old prices on closed markets for some reason.\r\n//We check the book ticker to filter out closed markets.\r\nlet closedMarketsBinance;\r\nconst API = (0, rests_1.default)({\r\n    binance: {\r\n        $options: {\r\n            base: \"https://api.binance.com/api/v3\"\r\n        },\r\n        bookTicker: {\r\n            path: '/ticker/bookTicker',\r\n            on_success: (response) => (response.json)\r\n        },\r\n        ticker: {\r\n            path: \"/ticker/price\",\r\n            on_request(request) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (!closedMarketsBinance) {\r\n                        const bookTicker = yield request.instance.binance.bookTicker();\r\n                        closedMarketsBinance = bookTicker.map((pair) => {\r\n                            if (parseFloat(pair.askPrice) <= 0) {\r\n                                return pair.symbol;\r\n                            }\r\n                            return false;\r\n                        }).filter(p => p);\r\n                        //console.log(`${closedMarketsBinance.length} Binance Closed Markets have been filtered.`);\r\n                    }\r\n                });\r\n            },\r\n            on_success(response, request) {\r\n                //We use USD stablecoins to calculate Binance price\r\n                const usdPegs = {\r\n                    'USDT': 'USD',\r\n                    'USDC': 'USD',\r\n                    'BUSD': 'USD'\r\n                }, data = response.json;\r\n                if (!data || !Array.isArray(data)) {\r\n                    throw new Error(`Invalid response from Binance: ${JSON.stringify(data)}`);\r\n                }\r\n                return data.reduce((obj, pair) => {\r\n                    //Filter closed markets\r\n                    if (closedMarketsBinance && closedMarketsBinance.indexOf(pair.symbol) !== -1) {\r\n                        return obj;\r\n                    }\r\n                    const bSymbol = (0, helpers_1.symbolMap)(pair.symbol, usdPegs), bPrice = parseFloat(pair.price);\r\n                    obj[bSymbol] = bPrice;\r\n                    return obj;\r\n                }, {});\r\n            },\r\n        }\r\n    },\r\n    bitfinex: {\r\n        $options: {\r\n            base: \"https://api-pub.bitfinex.com/v2\"\r\n        },\r\n        ticker: {\r\n            path: \"/tickers\",\r\n            params: {\r\n                symbols: {\r\n                    help: 'The symbols you want information about as a comma separated list, or ALL for every symbol. (Examples of possible symbols: tBTCUSD, tETHUSD, fUSD, fBTC)',\r\n                    default: 'ALL',\r\n                    type: 'string'\r\n                }\r\n            },\r\n            on_success: function (response) {\r\n                const coinAliases = {\r\n                    'BAB': 'BCH',\r\n                    'DSH': 'DASH'\r\n                }, data = response.json;\r\n                if (!data || !Array.isArray(data)) {\r\n                    throw new Error(`Invalid response from Bitfinex: ${JSON.stringify(data)}`);\r\n                }\r\n                return data.reduce((obj, pair) => {\r\n                    if (!pair[0].startsWith(\"t\")) {\r\n                        return obj;\r\n                    }\r\n                    const bSymbol = (0, helpers_1.symbolMap)(pair[0].replace(/^t/, ''), coinAliases, true).replace(':', ''), bPrice = parseFloat(pair[7]);\r\n                    obj[bSymbol] = bPrice;\r\n                    return obj;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    coinbase: {\r\n        $options: {\r\n            base: 'https://api.coinbase.com/v2'\r\n        },\r\n        ticker: {\r\n            path: '/exchange-rates',\r\n            params: {\r\n                currency: {\r\n                    help: 'The exchange currency (default USD)',\r\n                },\r\n            },\r\n            on_success: (response) => {\r\n                var _a;\r\n                const data = (_a = response === null || response === void 0 ? void 0 : response.json) === null || _a === void 0 ? void 0 : _a.data;\r\n                if (!data) {\r\n                    throw new Error(`Invalid response from Coinbase: ${data}`);\r\n                }\r\n                return Object.keys(data.rates).reduce((o, v, i) => {\r\n                    const bSymbol = v + data.currency, bPrice = (0, helpers_1.formatNumber)(1 / parseFloat(data.rates[v]), 8);\r\n                    o[bSymbol] = bPrice;\r\n                    return o;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    kraken: {\r\n        $options: {\r\n            base: 'https://api.kraken.com/0/public'\r\n        },\r\n        pairs: {\r\n            path: '/AssetPairs',\r\n            on_success: (res) => {\r\n                //console.log(\"Getting kraken pairs...\");\r\n                return Object.keys(res.json.result);\r\n            }\r\n        },\r\n        ticker: {\r\n            path: '/Ticker',\r\n            on_request: (request) => __awaiter(void 0, void 0, void 0, function* () {\r\n                if (!krakenPairsList) {\r\n                    const assetPairs = yield request.instance.kraken.pairs();\r\n                    krakenPairsList = assetPairs;\r\n                }\r\n                return {\r\n                    url: request.url + '?pair=' + krakenPairsList\r\n                };\r\n            }),\r\n            on_success: (response) => {\r\n                var _a;\r\n                //They have weird symbols like XXRPXXBT\r\n                const fixedSymbols = {\r\n                    'XETC': 'ETC',\r\n                    'XETH': 'ETH',\r\n                    'XLTC': 'LTC',\r\n                    'XMLN': 'MLN',\r\n                    'XREP': 'REP',\r\n                    'XXBT': 'BTC',\r\n                    'XXDG': 'XDG',\r\n                    'XXLM': 'XLM',\r\n                    'XXMR': 'XMR',\r\n                    'XXRP': 'XRP',\r\n                    'XZEC': 'ZEC',\r\n                    'XBT': 'BTC',\r\n                    'ZAUD': 'AUD',\r\n                    'ZEUR': 'EUR',\r\n                    'ZGBP': 'GBP',\r\n                    'ZUSD': 'USD',\r\n                    'ZCAD': 'CAD',\r\n                    'ZJPY': 'JPY'\r\n                }, data = (_a = response.json) === null || _a === void 0 ? void 0 : _a.result;\r\n                if (!data) {\r\n                    throw new Error(`Invalid response from Kraken: ${JSON.stringify(data)}`);\r\n                }\r\n                return Object.keys(data).reduce((obj, symbol) => {\r\n                    const bSymbol = (0, helpers_1.symbolMap)(symbol, fixedSymbols, true), bPrice = parseFloat(data[symbol].c[0]);\r\n                    obj[bSymbol] = bPrice;\r\n                    return obj;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    coinmarketcap: {\r\n        $options: {\r\n            base: \"https://api.coinmarketcap.com/data-api/v3\"\r\n        },\r\n        top: {\r\n            path: \"/map/all\",\r\n            params: {\r\n                limit: {\r\n                    default: \"150\",\r\n                },\r\n                listing_status: {\r\n                    default: \"active\"\r\n                }\r\n            },\r\n            on_success: function (response) {\r\n                const data = response.json;\r\n                if (!data || !data.data || !Array.isArray(data.data.cryptoCurrencyMap)) {\r\n                    throw new Error(`Invalid response from CoinMarketCap: ${JSON.stringify(data)}`);\r\n                }\r\n                return data.data.cryptoCurrencyMap.reduce((o, v) => {\r\n                    o[v.symbol] = {\r\n                        id: v.id,\r\n                        title: v.name,\r\n                        symbol: v.symbol,\r\n                        logo: `https://s2.coinmarketcap.com/static/img/coins/128x128/${v.id}.png`,\r\n                        rank: v.rank,\r\n                    };\r\n                    return o;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    fiat: {\r\n        all: {\r\n            path: \"https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml\",\r\n            on_success: function (response) {\r\n                var xml = response.text;\r\n                var currencies = [...xml.matchAll(/currency=[\"']([A-Za-z]+)[\"']/gi)];\r\n                var rates = [...xml.matchAll(/rate=[\"']([.0-9]+)[\"']/gi)];\r\n                var full = currencies.reduce((obj, v, index) => (Object.assign(Object.assign({}, obj), { [v[1]]: rates[index][1] })), {});\r\n                full['EUR'] = 1; //Base is in EUR\r\n                return full;\r\n            }\r\n        }\r\n    },\r\n    coinconvert: {\r\n        $options: {\r\n            base: 'https://api.coinconvert.net'\r\n        },\r\n        ticker: {\r\n            path: \"/v2/ticker\",\r\n            params: {\r\n                v: {\r\n                    default: '2.1.6'\r\n                },\r\n                filterExchanges: {\r\n                    type: \"array\"\r\n                },\r\n                noAverage: {\r\n                    type: \"boolean\"\r\n                }\r\n            },\r\n            on_success: (response) => (response.json)\r\n        },\r\n        list: {\r\n            path: \"/v2/list?v=2.1.6\",\r\n            on_success: (response) => (response.json)\r\n        }\r\n    }\r\n});\r\nexports.default = API;\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initialCoinList = void 0;\r\nconst api_1 = __importDefault(require(\"./api\"));\r\nconst helpers_1 = require(\"./helpers\");\r\nexports.initialCoinList = {\r\n    \"crypto\": [\r\n        \"BTC\", \"ETH\", \"USDT\", \"USDC\", \"BNB\", \"XRP\", \"BUSD\", \"ADA\", \"SOL\", \"DOGE\", \"DOT\", \"DAI\", \"MATIC\", \"SHIB\", \"TRX\", \"AVAX\", \"UNI\", \"WBTC\", \"LEO\", \"LTC\", \"ETC\", \"LINK\", \"ATOM\", \"FTT\", \"XLM\", \"NEAR\", \"CRO\", \"XMR\", \"ALGO\", \"BCH\", \"LUNC\", \"FLOW\", \"QNT\", \"VET\", \"TON\", \"FIL\", \"APE\", \"ICP\", \"CHZ\", \"HBAR\", \"MANA\", \"XTZ\", \"SAND\", \"EOS\", \"EGLD\", \"THETA\", \"AAVE\", \"AXS\", \"OKB\", \"USDP\", \"BSV\", \"KCS\", \"TUSD\", \"ZEC\", \"MIOTA\", \"XEC\", \"USDD\", \"MKR\", \"BTT\", \"HT\", \"GRT\", \"USDN\", \"HNT\", \"CAKE\", \"NEO\", \"KLAY\", \"FTM\", \"SNX\", \"PAXG\", \"RUNE\", \"NEXO\", \"LDO\", \"CRV\", \"GT\", \"DASH\", \"ENJ\", \"BAT\", \"COMP\", \"STX\", \"KAVA\", \"RVN\", \"ZIL\", \"WAVES\", \"FEI\", \"MINA\", \"RSR\", \"XDC\", \"LRC\", \"GMT\", \"DCR\", \"TWT\", \"CELO\", \"XEM\", \"BTG\", \"KSM\", \"HOT\", \"1INCH\", \"CEL\", \"CVX\", \"BNX\", \"AR\", \"GNO\", \"LUNA\", \"ROSE\", \"ENS\", \"USTC\", \"GUSD\", \"QTUM\", \"YFI\", \"ANKR\", \"TFUEL\", \"GALA\", \"GLM\", \"IOTX\", \"KDA\", \"BTRST\", \"ONE\", \"OMG\", \"BAL\", \"ZRX\", \"LPT\", \"POLY\", \"JST\", \"FLUX\", \"ICX\", \"BORA\", \"IOST\", \"HIVE\", \"AMP\", \"OP\", \"KNC\", \"XYM\", \"SRM\", \"ONT\", \"WAXP\", \"STORJ\", \"MXC\", \"CSPR\", \"IMX\", \"SC\", \"ZEN\", \"AUDIO\", \"GLMR\", \"SXP\", \"XCH\", \"ABBC\", \"CHSB\", \"VGX\", \"UMA\", \"WOO\"\r\n    ],\r\n    \"fiat\": [\r\n        \"USD\", \"JPY\", \"BGN\", \"CZK\", \"DKK\", \"GBP\", \"HUF\", \"PLN\", \"RON\", \"SEK\", \"CHF\", \"ISK\", \"NOK\", \"HRK\", \"RUB\", \"TRY\", \"AUD\", \"BRL\", \"CAD\", \"CNY\", \"HKD\", \"IDR\", \"ILS\", \"INR\", \"KRW\", \"MXN\", \"MYR\", \"NZD\", \"PHP\", \"SGD\", \"THB\", \"ZAR\", \"EUR\"\r\n    ]\r\n};\r\nclass PricesWorker {\r\n    constructor(o) {\r\n        this.exchanges = ['binance', 'bitfinex', 'coinbase', 'kraken'];\r\n        this.list = exports.initialCoinList;\r\n        this.cryptoInfo = [{ \"id\": 1, \"title\": \"Bitcoin\", \"symbol\": \"BTC\", \"rank\": 1 }, { \"id\": 1027, \"title\": \"Ethereum\", \"symbol\": \"ETH\", \"rank\": 2 }, { \"id\": 825, \"title\": \"Tether\", \"symbol\": \"USDT\", \"rank\": 3 }, { \"id\": 3408, \"title\": \"USD Coin\", \"symbol\": \"USDC\", \"rank\": 4 }, { \"id\": 1839, \"title\": \"BNB\", \"symbol\": \"BNB\", \"rank\": 5 }, { \"id\": 52, \"title\": \"XRP\", \"symbol\": \"XRP\", \"rank\": 6 }, { \"id\": 4687, \"title\": \"Binance USD\", \"symbol\": \"BUSD\", \"rank\": 7 }, { \"id\": 2010, \"title\": \"Cardano\", \"symbol\": \"ADA\", \"rank\": 8 }, { \"id\": 5426, \"title\": \"Solana\", \"symbol\": \"SOL\", \"rank\": 9 }, { \"id\": 74, \"title\": \"Dogecoin\", \"symbol\": \"DOGE\", \"rank\": 10 }, { \"id\": 6636, \"title\": \"Polkadot\", \"symbol\": \"DOT\", \"rank\": 11 }, { \"id\": 4943, \"title\": \"Dai\", \"symbol\": \"DAI\", \"rank\": 12 }, { \"id\": 3890, \"title\": \"Polygon\", \"symbol\": \"MATIC\", \"rank\": 13 }, { \"id\": 5994, \"title\": \"Shiba Inu\", \"symbol\": \"SHIB\", \"rank\": 14 }, { \"id\": 1958, \"title\": \"TRON\", \"symbol\": \"TRX\", \"rank\": 15 }, { \"id\": 5805, \"title\": \"Avalanche\", \"symbol\": \"AVAX\", \"rank\": 16 }, { \"id\": 7083, \"title\": \"Uniswap\", \"symbol\": \"UNI\", \"rank\": 17 }, { \"id\": 3717, \"title\": \"Wrapped Bitcoin\", \"symbol\": \"WBTC\", \"rank\": 18 }, { \"id\": 3957, \"title\": \"UNUS SED LEO\", \"symbol\": \"LEO\", \"rank\": 19 }, { \"id\": 2, \"title\": \"Litecoin\", \"symbol\": \"LTC\", \"rank\": 20 }, { \"id\": 1321, \"title\": \"Ethereum Classic\", \"symbol\": \"ETC\", \"rank\": 21 }, { \"id\": 1975, \"title\": \"Chainlink\", \"symbol\": \"LINK\", \"rank\": 22 }, { \"id\": 3794, \"title\": \"Cosmos\", \"symbol\": \"ATOM\", \"rank\": 23 }, { \"id\": 4195, \"title\": \"FTX Token\", \"symbol\": \"FTT\", \"rank\": 24 }, { \"id\": 512, \"title\": \"Stellar\", \"symbol\": \"XLM\", \"rank\": 25 }, { \"id\": 6535, \"title\": \"NEAR Protocol\", \"symbol\": \"NEAR\", \"rank\": 26 }, { \"id\": 3635, \"title\": \"Cronos\", \"symbol\": \"CRO\", \"rank\": 27 }, { \"id\": 328, \"title\": \"Monero\", \"symbol\": \"XMR\", \"rank\": 28 }, { \"id\": 4030, \"title\": \"Algorand\", \"symbol\": \"ALGO\", \"rank\": 29 }, { \"id\": 1831, \"title\": \"Bitcoin Cash\", \"symbol\": \"BCH\", \"rank\": 30 }, { \"id\": 4172, \"title\": \"Terra Classic\", \"symbol\": \"LUNC\", \"rank\": 31 }, { \"id\": 4558, \"title\": \"Flow\", \"symbol\": \"FLOW\", \"rank\": 32 }, { \"id\": 3155, \"title\": \"Quant\", \"symbol\": \"QNT\", \"rank\": 33 }, { \"id\": 3077, \"title\": \"VeChain\", \"symbol\": \"VET\", \"rank\": 34 }, { \"id\": 11419, \"title\": \"Toncoin\", \"symbol\": \"TON\", \"rank\": 35 }, { \"id\": 2280, \"title\": \"Filecoin\", \"symbol\": \"FIL\", \"rank\": 36 }, { \"id\": 18876, \"title\": \"ApeCoin\", \"symbol\": \"APE\", \"rank\": 37 }, { \"id\": 8916, \"title\": \"Internet Computer\", \"symbol\": \"ICP\", \"rank\": 38 }, { \"id\": 4066, \"title\": \"Chiliz\", \"symbol\": \"CHZ\", \"rank\": 39 }, { \"id\": 4642, \"title\": \"Hedera\", \"symbol\": \"HBAR\", \"rank\": 40 }, { \"id\": 1966, \"title\": \"Decentraland\", \"symbol\": \"MANA\", \"rank\": 41 }, { \"id\": 2011, \"title\": \"Tezos\", \"symbol\": \"XTZ\", \"rank\": 42 }, { \"id\": 6210, \"title\": \"The Sandbox\", \"symbol\": \"SAND\", \"rank\": 43 }, { \"id\": 1765, \"title\": \"EOS\", \"symbol\": \"EOS\", \"rank\": 44 }, { \"id\": 6892, \"title\": \"Elrond\", \"symbol\": \"EGLD\", \"rank\": 45 }, { \"id\": 2416, \"title\": \"Theta Network\", \"symbol\": \"THETA\", \"rank\": 46 }, { \"id\": 7278, \"title\": \"Aave\", \"symbol\": \"AAVE\", \"rank\": 47 }, { \"id\": 6783, \"title\": \"Axie Infinity\", \"symbol\": \"AXS\", \"rank\": 48 }, { \"id\": 3897, \"title\": \"OKB\", \"symbol\": \"OKB\", \"rank\": 49 }, { \"id\": 3330, \"title\": \"Pax Dollar\", \"symbol\": \"USDP\", \"rank\": 50 }, { \"id\": 3602, \"title\": \"Bitcoin SV\", \"symbol\": \"BSV\", \"rank\": 51 }, { \"id\": 2087, \"title\": \"KuCoin Token\", \"symbol\": \"KCS\", \"rank\": 52 }, { \"id\": 2563, \"title\": \"TrueUSD\", \"symbol\": \"TUSD\", \"rank\": 53 }, { \"id\": 1437, \"title\": \"Zcash\", \"symbol\": \"ZEC\", \"rank\": 54 }, { \"id\": 1720, \"title\": \"IOTA\", \"symbol\": \"MIOTA\", \"rank\": 55 }, { \"id\": 10791, \"title\": \"eCash\", \"symbol\": \"XEC\", \"rank\": 56 }, { \"id\": 19891, \"title\": \"USDD\", \"symbol\": \"USDD\", \"rank\": 57 }, { \"id\": 1518, \"title\": \"Maker\", \"symbol\": \"MKR\", \"rank\": 58 }, { \"id\": 16086, \"title\": \"BitTorrent-New\", \"symbol\": \"BTT\", \"rank\": 59 }, { \"id\": 2502, \"title\": \"Huobi Token\", \"symbol\": \"HT\", \"rank\": 60 }, { \"id\": 6719, \"title\": \"The Graph\", \"symbol\": \"GRT\", \"rank\": 61 }, { \"id\": 5068, \"title\": \"Neutrino USD\", \"symbol\": \"USDN\", \"rank\": 62 }, { \"id\": 5665, \"title\": \"Helium\", \"symbol\": \"HNT\", \"rank\": 63 }, { \"id\": 7186, \"title\": \"PancakeSwap\", \"symbol\": \"CAKE\", \"rank\": 64 }, { \"id\": 1376, \"title\": \"Neo\", \"symbol\": \"NEO\", \"rank\": 65 }, { \"id\": 4256, \"title\": \"Klaytn\", \"symbol\": \"KLAY\", \"rank\": 66 }, { \"id\": 3513, \"title\": \"Fantom\", \"symbol\": \"FTM\", \"rank\": 67 }, { \"id\": 2586, \"title\": \"Synthetix\", \"symbol\": \"SNX\", \"rank\": 68 }, { \"id\": 4705, \"title\": \"PAX Gold\", \"symbol\": \"PAXG\", \"rank\": 69 }, { \"id\": 4157, \"title\": \"THORChain\", \"symbol\": \"RUNE\", \"rank\": 70 }, { \"id\": 2694, \"title\": \"Nexo\", \"symbol\": \"NEXO\", \"rank\": 71 }, { \"id\": 8000, \"title\": \"Lido DAO\", \"symbol\": \"LDO\", \"rank\": 72 }, { \"id\": 6538, \"title\": \"Curve DAO Token\", \"symbol\": \"CRV\", \"rank\": 73 }, { \"id\": 4269, \"title\": \"GateToken\", \"symbol\": \"GT\", \"rank\": 74 }, { \"id\": 131, \"title\": \"Dash\", \"symbol\": \"DASH\", \"rank\": 75 }, { \"id\": 2130, \"title\": \"Enjin Coin\", \"symbol\": \"ENJ\", \"rank\": 76 }, { \"id\": 1697, \"title\": \"Basic Attention Token\", \"symbol\": \"BAT\", \"rank\": 77 }, { \"id\": 5692, \"title\": \"Compound\", \"symbol\": \"COMP\", \"rank\": 78 }, { \"id\": 4847, \"title\": \"Stacks\", \"symbol\": \"STX\", \"rank\": 79 }, { \"id\": 4846, \"title\": \"Kava\", \"symbol\": \"KAVA\", \"rank\": 80 }, { \"id\": 2577, \"title\": \"Ravencoin\", \"symbol\": \"RVN\", \"rank\": 81 }, { \"id\": 2469, \"title\": \"Zilliqa\", \"symbol\": \"ZIL\", \"rank\": 82 }, { \"id\": 1274, \"title\": \"Waves\", \"symbol\": \"WAVES\", \"rank\": 83 }, { \"id\": 8642, \"title\": \"Fei USD\", \"symbol\": \"FEI\", \"rank\": 84 }, { \"id\": 8646, \"title\": \"Mina\", \"symbol\": \"MINA\", \"rank\": 85 }, { \"id\": 3964, \"title\": \"Reserve Rights\", \"symbol\": \"RSR\", \"rank\": 86 }, { \"id\": 2634, \"title\": \"XDC Network\", \"symbol\": \"XDC\", \"rank\": 87 }, { \"id\": 1934, \"title\": \"Loopring\", \"symbol\": \"LRC\", \"rank\": 88 }, { \"id\": 18069, \"title\": \"STEPN\", \"symbol\": \"GMT\", \"rank\": 89 }, { \"id\": 1168, \"title\": \"Decred\", \"symbol\": \"DCR\", \"rank\": 90 }, { \"id\": 5964, \"title\": \"Trust Wallet Token\", \"symbol\": \"TWT\", \"rank\": 91 }, { \"id\": 5567, \"title\": \"Celo\", \"symbol\": \"CELO\", \"rank\": 92 }, { \"id\": 873, \"title\": \"NEM\", \"symbol\": \"XEM\", \"rank\": 93 }, { \"id\": 2083, \"title\": \"Bitcoin Gold\", \"symbol\": \"BTG\", \"rank\": 94 }, { \"id\": 5034, \"title\": \"Kusama\", \"symbol\": \"KSM\", \"rank\": 95 }, { \"id\": 2682, \"title\": \"Holo\", \"symbol\": \"HOT\", \"rank\": 96 }, { \"id\": 8104, \"title\": \"1inch Network\", \"symbol\": \"1INCH\", \"rank\": 97 }, { \"id\": 2700, \"title\": \"Celsius\", \"symbol\": \"CEL\", \"rank\": 98 }, { \"id\": 9903, \"title\": \"Convex Finance\", \"symbol\": \"CVX\", \"rank\": 99 }, { \"id\": 9891, \"title\": \"BinaryX\", \"symbol\": \"BNX\", \"rank\": 100 }, { \"id\": 5632, \"title\": \"Arweave\", \"symbol\": \"AR\", \"rank\": 101 }, { \"id\": 1659, \"title\": \"Gnosis\", \"symbol\": \"GNO\", \"rank\": 102 }, { \"id\": 20314, \"title\": \"Terra\", \"symbol\": \"LUNA\", \"rank\": 103 }, { \"id\": 7653, \"title\": \"Oasis Network\", \"symbol\": \"ROSE\", \"rank\": 104 }, { \"id\": 13855, \"title\": \"Ethereum Name Service\", \"symbol\": \"ENS\", \"rank\": 105 }, { \"id\": 7129, \"title\": \"TerraClassicUSD\", \"symbol\": \"USTC\", \"rank\": 106 }, { \"id\": 3306, \"title\": \"Gemini Dollar\", \"symbol\": \"GUSD\", \"rank\": 107 }, { \"id\": 1684, \"title\": \"Qtum\", \"symbol\": \"QTUM\", \"rank\": 108 }, { \"id\": 5864, \"title\": \"yearn.finance\", \"symbol\": \"YFI\", \"rank\": 109 }, { \"id\": 3783, \"title\": \"Ankr\", \"symbol\": \"ANKR\", \"rank\": 110 }, { \"id\": 3822, \"title\": \"Theta Fuel\", \"symbol\": \"TFUEL\", \"rank\": 111 }, { \"id\": 7080, \"title\": \"Gala\", \"symbol\": \"GALA\", \"rank\": 112 }, { \"id\": 1455, \"title\": \"Golem\", \"symbol\": \"GLM\", \"rank\": 113 }, { \"id\": 2777, \"title\": \"IoTeX\", \"symbol\": \"IOTX\", \"rank\": 114 }, { \"id\": 5647, \"title\": \"Kadena\", \"symbol\": \"KDA\", \"rank\": 115 }, { \"id\": 11584, \"title\": \"Braintrust\", \"symbol\": \"BTRST\", \"rank\": 116 }, { \"id\": 3945, \"title\": \"Harmony\", \"symbol\": \"ONE\", \"rank\": 117 }, { \"id\": 1808, \"title\": \"OMG Network\", \"symbol\": \"OMG\", \"rank\": 118 }, { \"id\": 5728, \"title\": \"Balancer\", \"symbol\": \"BAL\", \"rank\": 119 }, { \"id\": 1896, \"title\": \"0x\", \"symbol\": \"ZRX\", \"rank\": 120 }, { \"id\": 3640, \"title\": \"Livepeer\", \"symbol\": \"LPT\", \"rank\": 121 }, { \"id\": 2496, \"title\": \"Polymath\", \"symbol\": \"POLY\", \"rank\": 122 }, { \"id\": 5488, \"title\": \"JUST\", \"symbol\": \"JST\", \"rank\": 123 }, { \"id\": 3029, \"title\": \"Flux\", \"symbol\": \"FLUX\", \"rank\": 124 }, { \"id\": 2099, \"title\": \"ICON\", \"symbol\": \"ICX\", \"rank\": 125 }, { \"id\": 3801, \"title\": \"BORA\", \"symbol\": \"BORA\", \"rank\": 126 }, { \"id\": 2405, \"title\": \"IOST\", \"symbol\": \"IOST\", \"rank\": 127 }, { \"id\": 5370, \"title\": \"Hive\", \"symbol\": \"HIVE\", \"rank\": 128 }, { \"id\": 6945, \"title\": \"Amp\", \"symbol\": \"AMP\", \"rank\": 129 }, { \"id\": 11840, \"title\": \"Optimism\", \"symbol\": \"OP\", \"rank\": 130 }, { \"id\": 9444, \"title\": \"Kyber Network Crystal v2\", \"symbol\": \"KNC\", \"rank\": 131 }, { \"id\": 8677, \"title\": \"Symbol\", \"symbol\": \"XYM\", \"rank\": 132 }, { \"id\": 6187, \"title\": \"Serum\", \"symbol\": \"SRM\", \"rank\": 133 }, { \"id\": 2566, \"title\": \"Ontology\", \"symbol\": \"ONT\", \"rank\": 134 }, { \"id\": 2300, \"title\": \"WAX\", \"symbol\": \"WAXP\", \"rank\": 135 }, { \"id\": 1772, \"title\": \"Storj\", \"symbol\": \"STORJ\", \"rank\": 136 }, { \"id\": 3628, \"title\": \"MXC\", \"symbol\": \"MXC\", \"rank\": 137 }, { \"id\": 5899, \"title\": \"Casper\", \"symbol\": \"CSPR\", \"rank\": 138 }, { \"id\": 10603, \"title\": \"Immutable X\", \"symbol\": \"IMX\", \"rank\": 139 }, { \"id\": 1042, \"title\": \"Siacoin\", \"symbol\": \"SC\", \"rank\": 140 }, { \"id\": 1698, \"title\": \"Horizen\", \"symbol\": \"ZEN\", \"rank\": 141 }, { \"id\": 7455, \"title\": \"Audius\", \"symbol\": \"AUDIO\", \"rank\": 142 }, { \"id\": 6836, \"title\": \"Moonbeam\", \"symbol\": \"GLMR\", \"rank\": 143 }, { \"id\": 4279, \"title\": \"SXP\", \"symbol\": \"SXP\", \"rank\": 144 }, { \"id\": 9258, \"title\": \"Chia\", \"symbol\": \"XCH\", \"rank\": 145 }, { \"id\": 3437, \"title\": \"ABBC Coin\", \"symbol\": \"ABBC\", \"rank\": 146 }, { \"id\": 2499, \"title\": \"SwissBorg\", \"symbol\": \"CHSB\", \"rank\": 147 }, { \"id\": 1817, \"title\": \"Voyager Token\", \"symbol\": \"VGX\", \"rank\": 148 }, { \"id\": 5617, \"title\": \"UMA\", \"symbol\": \"UMA\", \"rank\": 149 }, { \"id\": 7501, \"title\": \"WOO Network\", \"symbol\": \"WOO\", \"rank\": 150 }]\r\n            .reduce((o, v) => {\r\n            o[v.symbol] = Object.assign(Object.assign({}, o), { logo: `https://s2.coinmarketcap.com/static/img/coins/128x128/${v.id}.png` });\r\n            return o;\r\n        }, {});\r\n        this.data = {\r\n            \"crypto\": {\r\n                last_updated: null,\r\n                current: null\r\n            },\r\n            \"fiat\": {\r\n                last_updated: null,\r\n                current: null\r\n            }\r\n        };\r\n        this.options = Object.assign({ cryptoInterval: helpers_1.isBrowser ? 15 * 1e3 : (5 * 1e3), fiatInterval: (60 * 1e3 * 60), calculateAverage: true, onUpdate: undefined, serverHost: 'https://api.coinconvert.net', useHostedAPI: false, refreshCryptoList: true, listLimit: 150, disableExchangeMode: \"saveLastCache\" }, (this.exchanges.reduce((o, exchange) => (Object.assign(Object.assign({}, o), { [exchange]: true })), {})));\r\n        this.isReady = false;\r\n        this.isRunning = false;\r\n        if (o) {\r\n            this.setOptions(o);\r\n        }\r\n        if (!this.hostedAPI) {\r\n            this.hostedAPI = new api_1.default.coinconvert({\r\n                $options: {\r\n                    base: this.options.serverHost\r\n                }\r\n            });\r\n        }\r\n    }\r\n    log(..._) {\r\n        var _a, _b;\r\n        if (!helpers_1.isBrowser && ((_b = (_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.NODE_ENV) === null || _b === void 0 ? void 0 : _b.startsWith('dev'))) {\r\n            Array.from(arguments).forEach((arg) => {\r\n                console.log(arg);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Options\r\n     */\r\n    setOptions(o) {\r\n        let newOptions = typeof o === \"function\" ?\r\n            o(Object.assign({}, this.options)) :\r\n            (o || {});\r\n        if (helpers_1.isBrowser && !isNaN(newOptions.cryptoInterval) && newOptions.cryptoInterval < 10000) {\r\n            console.error(`The minimum allowed interval on frontend is 10s. You should host your own server API if you want to go lower.\r\n\t\t\t\r\n\t\t\tFor the server API routes see the CoinConvert schema on https://github.com/coinconvert/crypto-convert/blob/main/src/api.ts;\r\n\t\t\t`);\r\n        }\r\n        //Check if new options affect prices\r\n        let exchangesUpdated = false, averageUpdated = newOptions.hasOwnProperty('calculateAverage') && newOptions.calculateAverage !== this.options.calculateAverage, disabledExchangesModeUpdated = newOptions['disableExchangeMode'] === 'saveAllCache' && this.options.disableExchangeMode !== 'saveAllCache';\r\n        for (const exchange of this.exchanges) {\r\n            if (newOptions.hasOwnProperty(exchange) && newOptions[exchange] !== this.options[exchange]) {\r\n                exchangesUpdated = true;\r\n                break;\r\n            }\r\n        }\r\n        //Save options\r\n        if (newOptions.hasOwnProperty('HTTPAgent')) {\r\n            api_1.default.set({\r\n                $options: {\r\n                    fetch_agent: newOptions.HTTPAgent\r\n                }\r\n            });\r\n        }\r\n        if (newOptions.serverHost && (0, helpers_1.isValidUrl)(newOptions.serverHost)) {\r\n            this.options.serverHost = newOptions.serverHost;\r\n            this.hostedAPI = new api_1.default.coinconvert({\r\n                $options: {\r\n                    base: newOptions.serverHost\r\n                }\r\n            });\r\n        }\r\n        this.options = Object.assign(Object.assign(Object.assign({}, this.options), newOptions), { \r\n            /**\r\n             * Minimum interval set to 1s on Node.js and 10s on Browsers.\r\n             * You can go up to 1s on browsers if you have set a custom server host.\r\n             */\r\n            cryptoInterval: isNaN(newOptions.cryptoInterval) ?\r\n                this.options.cryptoInterval :\r\n                Math.max(helpers_1.isBrowser && !this.isCustomServerHost ? 10000 : 1000, newOptions.cryptoInterval), fiatInterval: isNaN(newOptions.fiatInterval) ?\r\n                this.options.fiatInterval :\r\n                Math.max(60 * 30 * 1e3, newOptions.fiatInterval), \r\n            /**\r\n             * Maximum 1000\r\n             * If the limit is too high, it might cause some memory and performance issues.\r\n             */\r\n            listLimit: isNaN(newOptions.listLimit) ?\r\n                this.options.listLimit :\r\n                Math.max(1, Math.min(1000, parseInt(newOptions.listLimit + ''))) });\r\n        //Update current prices\r\n        if ((exchangesUpdated || averageUpdated) && this.isReady) {\r\n            if (helpers_1.isBrowser || this.options.useHostedAPI) {\r\n                return this.browserTicker();\r\n            }\r\n            else {\r\n                if (this.options.disableExchangeMode === 'noCache' || disabledExchangesModeUpdated) {\r\n                    return this.updateCrypto();\r\n                }\r\n                this.data.crypto.current = this.joinPrices(this.data);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    get isCustomServerHost() {\r\n        return !/^https?:\\/\\/api\\.coinconvert\\.net/i.test(this.options.serverHost);\r\n    }\r\n    updateCrypto() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.data.crypto.last_updated) {\r\n                this.log(\"Updating crypto...\");\r\n            }\r\n            const tickers = this.exchanges.reduce((o, exchange) => (Object.assign(Object.assign({}, o), { [exchange]: api_1.default[exchange].ticker })), {});\r\n            let currents = [], current = {};\r\n            for (const ticker in tickers) {\r\n                if (!this.options[ticker] && this.options.disableExchangeMode !== 'saveAllCache') {\r\n                    continue;\r\n                }\r\n                try {\r\n                    this.data.crypto[ticker] = yield tickers[ticker]();\r\n                    if (this.options[ticker]) {\r\n                        currents.push(this.data.crypto[ticker]);\r\n                        current = Object.assign(Object.assign({}, current), this.data.crypto[ticker]);\r\n                        this.data.crypto.last_updated = (+new Date());\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    this.data.crypto[ticker] = null;\r\n                    console.error(`Failed fetching prices from ${ticker}`, err);\r\n                }\r\n            }\r\n            if (currents.length) {\r\n                this.data.crypto.current = this.options.calculateAverage ? Object.assign(Object.assign({}, current), (0, helpers_1.getAverage)(currents)) : current;\r\n                if (typeof this.options.onUpdate === \"function\") {\r\n                    this.options.onUpdate(this.data.crypto);\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    updateFiat() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.log(\"Updating fiat...\");\r\n            try {\r\n                this.data.fiat.current = yield api_1.default.fiat.all();\r\n                this.data.fiat.last_updated = (+new Date());\r\n                if (typeof this.options.onUpdate === \"function\") {\r\n                    this.options.onUpdate(this.data.fiat, true);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.error(`Failed fetching fiat prices from ECB`, err);\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    updateLists() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.data.crypto.last_updated) {\r\n                this.log(\"Updating top currency list...\");\r\n            }\r\n            try {\r\n                const getTopList = yield api_1.default.coinmarketcap.top({\r\n                    limit: this.options.listLimit + ''\r\n                });\r\n                this.list.crypto = Object.keys(getTopList);\r\n                this.cryptoInfo = getTopList;\r\n                if (typeof this.onCryptoListRefresh == \"function\" && this.isReady) {\r\n                    this.onCryptoListRefresh(this.list.crypto);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.error(`Failed fetching fiat prices from ECB`, err);\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    joinPrices(data) {\r\n        const exchangesData = this.exchanges.reduce((o, exchange) => (Object.assign(Object.assign({}, o), { [exchange]: data.crypto[exchange] })), {});\r\n        let currents = [], current = {};\r\n        for (const exchange in exchangesData) {\r\n            if (!this.options[exchange] || !exchangesData[exchange]) {\r\n                continue;\r\n            }\r\n            currents.push(exchangesData[exchange]);\r\n            current = Object.assign(Object.assign({}, current), exchangesData[exchange]);\r\n        }\r\n        return this.options.calculateAverage ? Object.assign(Object.assign({}, current), (0, helpers_1.getAverage)(currents)) : current;\r\n    }\r\n    browserTicker() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const currentOptions = this.options;\r\n                const disabledExchanges = this.exchanges.filter((exchange) => !currentOptions[exchange]);\r\n                const data = yield this.hostedAPI.ticker(disabledExchanges.length ? {\r\n                    'filterExchanges': disabledExchanges,\r\n                    'noAverage': !this.options.calculateAverage ? true : undefined\r\n                } : {});\r\n                this.data = data;\r\n                if (typeof this.options.onUpdate === \"function\") {\r\n                    this.options.onUpdate(this.data);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.error(`Failed fetching prices from API`, err);\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    browserLists() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const getTopList = yield this.hostedAPI.list();\r\n                this.list.crypto = Object.keys(getTopList.crypto);\r\n                this.list.fiat = getTopList.fiat;\r\n                this.cryptoInfo = getTopList.crypto;\r\n                if (typeof this.onCryptoListRefresh == \"function\" && this.isReady) {\r\n                    this.onCryptoListRefresh(this.list.crypto);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.error('Failed fetching currencies list from API', err);\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    runBrowser() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof window !== \"undefined\" && window['__ccRunning']) {\r\n                throw new Error(`The crypto-convert worker seems to be already running. \r\n\t\t\t- There might be an issue with the way your app imports javascript dependencies. \r\n\t\t\t- Make sure to call 'convert.stop()' on component unmounts if you are using SPA frameworks (e.g React).`);\r\n            }\r\n            //First run only\r\n            if (!this.isReady) {\r\n                yield this.browserTicker();\r\n                //Update lists\r\n                yield this.browserLists();\r\n                if (!this.isRunning) {\r\n                    return false;\r\n                }\r\n                if (!helpers_1.isBrowser && this.options.useHostedAPI && this.options.refreshCryptoList) {\r\n                    this.lists_worker = setInterval(this.browserLists.bind(this), 86400 //every day\r\n                    );\r\n                }\r\n            }\r\n            this.crypto_worker = setInterval(this.browserTicker.bind(this), this.options.cryptoInterval);\r\n            this.isReady = true;\r\n            if (typeof window !== \"undefined\") {\r\n                window['__ccRunning'] = true;\r\n                if (window['__ccRunID']) {\r\n                    clearInterval(window['__ccRunID']);\r\n                }\r\n                window['__ccRunID'] = this.crypto_worker;\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    runServer() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.updateLists();\r\n            yield this.updateFiat();\r\n            yield this.updateCrypto();\r\n            if (!this.isRunning) {\r\n                return false;\r\n            }\r\n            this.isReady = true;\r\n            this.crypto_worker = setInterval(this.updateCrypto.bind(this), this.options.cryptoInterval);\r\n            this.fiat_worker = setInterval(this.updateFiat.bind(this), this.options.fiatInterval);\r\n            if (this.options.refreshCryptoList) {\r\n                this.lists_worker = setInterval(this.updateLists.bind(this), 86400 //every day\r\n                );\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n    run() {\r\n        if (this.isRunning || this.crypto_worker) {\r\n            throw new Error(\"Crypto-convert is already running.\");\r\n        }\r\n        this.isRunning = true;\r\n        if (helpers_1.isBrowser || this.options.useHostedAPI) {\r\n            return this.runBrowser();\r\n        }\r\n        return this.runServer();\r\n    }\r\n    stop() {\r\n        this.isRunning = false;\r\n        clearInterval(this.crypto_worker);\r\n        clearInterval(this.fiat_worker);\r\n        this.crypto_worker = null;\r\n        this.fiat_worker = null;\r\n        if (this.lists_worker) {\r\n            clearInterval(this.lists_worker);\r\n            this.lists_worker = null;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            window['__ccRunning'] = false;\r\n        }\r\n        return this;\r\n    }\r\n    restart() {\r\n        return this.stop().run();\r\n    }\r\n}\r\nexports.default = PricesWorker;\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst worker_1 = require(\"./worker\");\r\nclass CustomWorkers {\r\n    constructor() {\r\n        this.ticker = {};\r\n        this.list = [];\r\n        this.workers = {};\r\n        this.workersPromises = [];\r\n        //nothing\r\n    }\r\n    ready() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Promise.all(this.workersPromises);\r\n        });\r\n    }\r\n    addCurrency(base, quote, getter, interval) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (typeof base !== \"string\" || typeof quote !== \"string\" || !worker_1.initialCoinList.fiat.includes(quote)) {\r\n                throw new Error(\"Invalid currency pair.\");\r\n            }\r\n            if (typeof getter !== \"function\") {\r\n                throw new Error(\"No function specified.\");\r\n            }\r\n            base = base.toUpperCase(),\r\n                quote = quote.toUpperCase();\r\n            if (this.ticker[base + quote] || this.ticker[quote + base] || this.list.indexOf(base) != -1) {\r\n                console.warn(`This custom currency already exists, it will be overriden.`);\r\n                this.removeCurrency(base);\r\n            }\r\n            this.list.push(base);\r\n            if (interval) {\r\n                if (typeof interval !== \"number\") {\r\n                    throw new Error(\"Invalid interval specfied.\");\r\n                }\r\n                this.workers[base + quote] = setInterval(() => {\r\n                    return Promise.resolve(getter())\r\n                        .then((value) => {\r\n                        this.ticker[base + quote] = Number(value);\r\n                    });\r\n                }, interval);\r\n            }\r\n            const currentPromise = Promise.resolve(getter())\r\n                .then((value) => {\r\n                this.ticker[base + quote] = Number(value);\r\n            });\r\n            this.workersPromises.push(currentPromise);\r\n            return currentPromise;\r\n        });\r\n    }\r\n    removeCurrency(base, quote) {\r\n        base = base.toUpperCase(),\r\n            quote = quote ? quote.toUpperCase() : '';\r\n        for (const worker in this.workers) {\r\n            if (worker.includes(base + quote)) {\r\n                clearInterval(this.workers[worker]);\r\n                delete this.ticker[worker];\r\n            }\r\n        }\r\n        this.list = this.list.filter((v) => v !== base);\r\n    }\r\n}\r\nexports.default = CustomWorkers;\r\n", "\"use strict\";\r\n/*!\r\n * crypto-convert (c) 2022\r\n * Author: Elis\r\n * License: https://github.com/coinconvert/crypto-convert\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar _CryptoConvert_instances, _CryptoConvert_getPrice, _CryptoConvert_wrapper, _CryptoConvert_isSafeKey, _CryptoConvert_setExtendedOptions, _CryptoConvert_populate;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst helpers_1 = require(\"./helpers\");\r\nconst worker_1 = __importDefault(require(\"./worker\"));\r\nconst custom_1 = __importDefault(require(\"./custom\"));\r\nconst customWorkers = new custom_1.default();\r\nclass CryptoConvert {\r\n    constructor(options = {}) {\r\n        _CryptoConvert_instances.add(this);\r\n        this.precision = {\r\n            fiat: 4,\r\n            crypto: 8\r\n        };\r\n        if (helpers_1.isBrowser) {\r\n            if (window['__ccInitialized']) {\r\n                throw new Error(\"You have already initalized one instance of crypto-convert. You cannot initialize multiple instances.\");\r\n            }\r\n            window['__ccInitialized'] = true;\r\n        }\r\n        __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_setExtendedOptions).call(this, options);\r\n        this.worker = new worker_1.default(options);\r\n        this.workerReady = this.worker.run();\r\n        this.internalMethods = Object.getOwnPropertyNames(CryptoConvert.prototype);\r\n        Promise.resolve(this.workerReady).then(() => {\r\n            __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_populate).call(this);\r\n            this.worker.onCryptoListRefresh = () => {\r\n                __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_populate).call(this);\r\n            };\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n     * Quick check if cache has loaded.\r\n     */\r\n    get isReady() {\r\n        return this.worker.isReady;\r\n    }\r\n    /**\r\n     * Supported currencies list\r\n     */\r\n    get list() {\r\n        return {\r\n            'crypto': this.worker.list.crypto.concat(customWorkers.list),\r\n            'fiat': this.worker.list.fiat\r\n        };\r\n    }\r\n    /**\r\n     * Metadata information about cryptocurrencies\r\n     */\r\n    get cryptoInfo() {\r\n        return this.worker.cryptoInfo;\r\n    }\r\n    /**\r\n     * Get crypto prices last updated ms\r\n     */\r\n    get lastUpdated() {\r\n        return this.worker.data.crypto.last_updated;\r\n    }\r\n    /**\r\n     * Price Tickers\r\n     */\r\n    get ticker() {\r\n        return this.worker.data;\r\n    }\r\n    /**\r\n     * Update options\r\n     */\r\n    setOptions(options) {\r\n        __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_setExtendedOptions).call(this, options);\r\n        const workerIntervalChanged = (options.cryptoInterval || options.fiatInterval) && (options.cryptoInterval !== this.worker.options.cryptoInterval ||\r\n            options.fiatInterval !== this.worker.options.fiatInterval);\r\n        if (workerIntervalChanged ||\r\n            (options.hasOwnProperty('refreshCryptoList') && options.refreshCryptoList !== this.worker.options.refreshCryptoList) ||\r\n            (options.hasOwnProperty('useHostedAPI') && options.useHostedAPI !== this.worker.options.useHostedAPI) ||\r\n            (options.listLimit && options.listLimit != this.worker.options.listLimit)) {\r\n            if (!this.worker.isReady) {\r\n                throw new Error(\"You cannot set these options here because CryptoConvert is not ready yet. Instead set the options on the constructor parameter.\");\r\n            }\r\n            //Restart the worker in order to clear interval & update to new interval\r\n            this.workerReady = Promise.resolve(this.worker.setOptions(options))\r\n                .then(() => __awaiter(this, void 0, void 0, function* () {\r\n                yield this.worker.restart();\r\n                if (options.listLimit) {\r\n                    __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_populate).call(this);\r\n                }\r\n                return this.worker;\r\n            }));\r\n            return this.worker;\r\n        }\r\n        return this.worker.setOptions(options);\r\n    }\r\n    /**\r\n     * Stop the worker.\r\n     *\r\n     * It's recommended to do this on Component unmounts (i.e if you are using React).\r\n     */\r\n    stop() {\r\n        return this.worker.stop();\r\n    }\r\n    /**\r\n     * Re-start the worker when it has been stopped.\r\n     */\r\n    restart() {\r\n        this.workerReady = this.worker.restart();\r\n        return this.workerReady;\r\n    }\r\n    /**\r\n     * Promise function that resolves when cache has loaded.\r\n     */\r\n    ready() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield Promise.resolve(this.workerReady);\r\n            yield Promise.resolve(customWorkers.ready());\r\n            return this;\r\n        });\r\n    }\r\n    /**\r\n     * Add a custom currency fetcher. Can be anything.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * convert.addCurrency('ANY','USD', async fetchPrice()=>{\r\n     * \t\t//...call your api here\r\n     * \t\treturn price;\r\n     * }, 10000);\r\n     * ```\r\n     */\r\n    addCurrency(base, ...rest) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.hasOwnProperty(base)) {\r\n                throw new Error(\"This property already exists.\");\r\n            }\r\n            return Promise.resolve(customWorkers.addCurrency.apply(customWorkers, [base, ...rest])).then(() => {\r\n                if (this.worker.isReady) {\r\n                    __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_populate).call(this);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n     * Remove custom currency fetcher.\r\n     */\r\n    removeCurrency(base, quote) {\r\n        var _a, _b;\r\n        if (customWorkers.list.includes(base) && __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_isSafeKey).call(this, base)) {\r\n            delete this[base];\r\n            const all_currencies = this.worker.list.crypto.concat(this.worker.list.fiat, customWorkers.list);\r\n            for (const currency of all_currencies) {\r\n                if ((_a = this[currency]) === null || _a === void 0 ? void 0 : _a[base]) {\r\n                    (_b = this[currency]) === null || _b === void 0 ? true : delete _b[base];\r\n                }\r\n            }\r\n        }\r\n        return customWorkers.removeCurrency(base, quote);\r\n    }\r\n}\r\n_CryptoConvert_instances = new WeakSet(), _CryptoConvert_getPrice = function _CryptoConvert_getPrice(coin, to = 'USD') {\r\n    var customResult = customWorkers.ticker[coin + to] || (customWorkers.ticker[to + coin] ? 1 / customWorkers.ticker[to + coin] : null);\r\n    var result = this.worker.data.crypto.current[coin + to] || (this.worker.data.crypto.current[to + coin] ? 1 / this.worker.data.crypto.current[to + coin] : null);\r\n    return customResult || result;\r\n}, _CryptoConvert_wrapper = function _CryptoConvert_wrapper(coin, currency) {\r\n    var coin = coin;\r\n    var toCurrency = currency;\r\n    const doExchange = (function (fromAmount) {\r\n        if ((0, helpers_1.isEmpty)(this.worker.data.crypto.current) || (0, helpers_1.isEmpty)(this.worker.data.fiat.current)) {\r\n            console.warn(\"[~] Prices are loading.\\nYou should use `await convert.ready()` to make sure prices are loaded before calling convert.\");\r\n            return false;\r\n        }\r\n        if (!fromAmount) {\r\n            return false;\r\n        }\r\n        fromAmount = (0, helpers_1.formatNumber)(fromAmount);\r\n        if (isNaN(fromAmount)) {\r\n            return false;\r\n        }\r\n        const fiatCurrencies = this.worker.data.fiat.current;\r\n        const cryptoCurrenciesList = this.worker.list.crypto.concat(customWorkers.list);\r\n        //Same\r\n        if (toCurrency == coin) {\r\n            return fromAmount;\r\n        }\r\n        //Crypto to Crypto\r\n        if (cryptoCurrenciesList.includes(coin) && cryptoCurrenciesList.includes(toCurrency)) {\r\n            let exchangePrice = __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_getPrice).call(this, coin, toCurrency) ||\r\n                __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_wrapper).call(this, \"USD\", toCurrency)(__classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_wrapper).call(this, coin, \"USD\")(1));\r\n            return (0, helpers_1.formatNumber)(exchangePrice * fromAmount, this.precision.crypto);\r\n        }\r\n        //Fiat to Fiat\r\n        if (fiatCurrencies[coin] && fiatCurrencies[toCurrency]) {\r\n            return (0, helpers_1.formatNumber)(((fromAmount / fiatCurrencies[coin]) * fiatCurrencies[toCurrency]), this.precision.fiat);\r\n        }\r\n        //Crypto->Fiat || Crypto->BTC->Fiat\r\n        var getCryptoPrice = (function (coin) {\r\n            var coinPrice = __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_getPrice).call(this, coin) ||\r\n                __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_wrapper).call(this, \"BTC\", \"USD\")(__classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_getPrice).call(this, coin, \"BTC\")) ||\r\n                __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_wrapper).call(this, \"ETH\", \"USD\")(__classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_getPrice).call(this, coin, \"ETH\"));\r\n            return coinPrice;\r\n        }).bind(this);\r\n        //Crypto to Fiat\r\n        if (fiatCurrencies[toCurrency]) {\r\n            let usdPrice = getCryptoPrice(coin);\r\n            let exchangePrice = (usdPrice / fiatCurrencies['USD']) * fiatCurrencies[toCurrency]; //Convert USD to chosen FIAT\r\n            return (0, helpers_1.formatNumber)(exchangePrice * fromAmount, this.precision.crypto);\r\n        }\r\n        //Fiat to Crypto\r\n        if (fiatCurrencies[coin]) {\r\n            let usdPrice = getCryptoPrice(toCurrency);\r\n            let exchangePrice = (usdPrice / fiatCurrencies['USD']) * fiatCurrencies[coin]; //Convert USD to chosen FIAT\r\n            return (0, helpers_1.formatNumber)(fromAmount / exchangePrice, this.precision.crypto);\r\n        }\r\n        return null;\r\n    }).bind(this);\r\n    return doExchange;\r\n}, _CryptoConvert_isSafeKey = function _CryptoConvert_isSafeKey(key) {\r\n    const functionProto = function () { };\r\n    return (!this.internalMethods.includes(key) &&\r\n        !key.startsWith('__') &&\r\n        !functionProto[key]);\r\n}, _CryptoConvert_setExtendedOptions = function _CryptoConvert_setExtendedOptions(options) {\r\n    if (options.precision) {\r\n        for (const precisionKey in options.precision) {\r\n            if ([\"crypto\", \"fiat\"].includes(precisionKey) && typeof options.precision[precisionKey] == \"number\") {\r\n                this.precision[precisionKey] = options.precision[precisionKey];\r\n            }\r\n        }\r\n    }\r\n}, _CryptoConvert_populate = function _CryptoConvert_populate() {\r\n    let types = '';\r\n    //Generate typescript interface\r\n    types += `type amount = (amount: number | string) => number | false | null;`;\r\n    types += '\\nexport interface Pairs {';\r\n    const all_currencies = this.worker.list.crypto.concat(this.worker.list.fiat, customWorkers.list);\r\n    for (var i = 0; i < all_currencies.length; i++) {\r\n        var coin = all_currencies[i];\r\n        if (!coin || typeof coin !== \"string\" || !__classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_isSafeKey).call(this, coin)) {\r\n            continue;\r\n        }\r\n        if (!this[coin]) {\r\n            this[coin] = {};\r\n        }\r\n        types += `\\n\\t'${coin.replace(/\\'/g, \"\\\\'\")}': {`;\r\n        for (var a = 0; a < all_currencies.length; a++) {\r\n            var currency = all_currencies[a];\r\n            if (!currency || typeof currency !== \"string\" || !__classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_isSafeKey).call(this, coin)) {\r\n                continue;\r\n            }\r\n            this[coin][currency] = __classPrivateFieldGet(this, _CryptoConvert_instances, \"m\", _CryptoConvert_wrapper).call(this, coin, currency);\r\n            types += `\\n\\t\\t'${currency.replace(/\\'/g, \"\\\\'\")}': amount,`;\r\n        }\r\n        types += '\\n},';\r\n    }\r\n    types += '\\n}';\r\n    //Create types file for Node.js. With Runtime types generation ^^\r\n    if (typeof window === \"undefined\" && typeof module !== \"undefined\" && typeof process !== \"undefined\") {\r\n        (function () {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    // Here we save the types file. Using eval because static linting checks on frontend apps are annoying af.\r\n                    eval(`\r\n\t\t\t\t\t\tconst fs = require('fs');\r\n\t\t\t\t\t\tconst path = require('path');\r\n\t\t\t\t\t\tconst isDist = path.basename(__dirname) == 'dist';\r\n\t\t\t\t\t\tconst typesFile = path.join(__dirname, isDist ? 'paris.d.ts' : 'paris.ts');\r\n\r\n\t\t\t\t\t\tfs.writeFileSync(typesFile, types, 'utf-8');\r\n\t\t\t\t\t`);\r\n                }\r\n                catch (err) {\r\n                    console.warn(err);\r\n                }\r\n            });\r\n        })();\r\n    }\r\n};\r\n//@ts-ignore\r\nCryptoConvert.default = CryptoConvert;\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n    module.exports = CryptoConvert;\r\n}\r\nexports.default = CryptoConvert;\r\n"],
  "mappings": "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",
  "names": ["exports", "i", "exports", "module", "require_browser", "exports", "module", "exports", "module", "__awaiter", "i", "options", "exports", "__awaiter", "__importDefault", "helpers_1", "i", "exports", "__awaiter", "__importDefault", "helpers_1", "o", "exports", "__awaiter", "worker_1", "all_currencies", "currency", "_CryptoConvert_getPrice", "coin", "_CryptoConvert_wrapper", "_CryptoConvert_isSafeKey", "_CryptoConvert_setExtendedOptions"]
}
